package interfacesGraficas;

import com.jtattoo.plaf.aero.AeroLookAndFeel;
import estadisticas.Estadisticas;
import evoluciondiferencial.EvolucionDiferencial;
import java.awt.BasicStroke;
import java.awt.Color;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;

import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.util.ShapeUtilities;
import ponr.PONR;
import ponr.SintesisProcesosKocis98;
import ponr.SintesisProcesosYuan88;

/**
 *
 * @author admin
 */
public class Inicio extends javax.swing.JFrame {

    private EvolucionDiferencial evolucionDiferencial;
    private PONR ponr;
    private Estadisticas estd;

    private int iteracionesED = 1;
    private int iteracionesBL = 10;
    private double probabilidadBL = 0.1;
    private String[] cabecera;

    public Inicio() {
        initComponents();
        this.estd = new Estadisticas();
        this.sliderIterBL.setValue(10);
        this.sliderProbabilidad.setValue(1);

        this.cargarPonr(this.boxProblemas.getSelectedIndex());

        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnIniciar = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        panelResultados = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbResultado = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel48 = new javax.swing.JLabel();
        panelConvergencia = new javax.swing.JPanel();
        configuracion = new javax.swing.JPanel();
        panelAjuste = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtMaxPop = new javax.swing.JTextField();
        txtCR = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtGmax = new javax.swing.JTextField();
        lblPob = new javax.swing.JLabel();
        lblCruz = new javax.swing.JLabel();
        lblMut = new javax.swing.JLabel();
        lblGen = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        sliderProbabilidad = new javax.swing.JSlider();
        lblIterBL = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        sliderIterBL = new javax.swing.JSlider();
        lblPro = new javax.swing.JLabel();
        panelEstadisticas = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtMejor = new javax.swing.JTextField();
        txtPeor = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtMedia = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtMediana = new javax.swing.JTextField();
        txtSTD = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtTasaFac = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtTasaExito = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        sliderIteraciones2 = new javax.swing.JSlider();
        jLabel61 = new javax.swing.JLabel();
        lblIterED2 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        boxProblemas = new javax.swing.JComboBox<>();
        jPanel15 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        txtD2 = new javax.swing.JTextField();
        txtFX2 = new javax.swing.JTextField();
        txtGX2 = new javax.swing.JTextField();
        txtHX2 = new javax.swing.JTextField();
        txtVariablesContinuas2 = new javax.swing.JTextField();
        txtVariablesBinarias2 = new javax.swing.JTextField();
        txtMejorConocido2 = new javax.swing.JTextField();
        lblNombreProblema = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmo Hibrido EDBL");

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 34)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(114, 173, 139));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ALGORITMO ED-BL");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(114, 173, 139));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Evolución Diferencial con Búsqueda Local");

        jPanel4.setBackground(new java.awt.Color(245, 245, 245));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Barra de acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N

        btnIniciar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnDetener.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnDetener.setText("Configuración recomendada");
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });

        btnNuevo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDetener)
                .addGap(18, 18, 18)
                .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnDetener)
                    .addComponent(btnIniciar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelResultados.setBackground(new java.awt.Color(245, 245, 245));
        panelResultados.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados de las iteraciones configuradas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(114, 173, 139))); // NOI18N

        tbResultado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "x1", "FO", "SVR"
            }
        ));
        tbResultado.setGridColor(new java.awt.Color(51, 153, 255));
        tbResultado.setRowHeight(25);
        tbResultado.setShowGrid(true);
        jScrollPane2.setViewportView(tbResultado);

        jLabel24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel24.setText("x1,...,xn:");

        jLabel25.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel25.setText("FO:");

        jLabel26.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel26.setText("SVR:");

        jLabel29.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel29.setText("Variables de diseño.");

        jLabel36.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel36.setText("Función Objetivo.");

        jLabel37.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel37.setText("Suma de Violación de Restricciones.");

        jLabel38.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel38.setText("Nota:");

        jLabel39.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel39.setText("Si SVR = 0, entonces el vector de soluciones es competitivo.");

        jLabel48.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("La tabla presenta los mejores resultados obtenidos en cada iteración");

        panelConvergencia.setBackground(new java.awt.Color(245, 245, 245));
        panelConvergencia.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Convergencia de la mediana ejecución  ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N

        javax.swing.GroupLayout panelConvergenciaLayout = new javax.swing.GroupLayout(panelConvergencia);
        panelConvergencia.setLayout(panelConvergenciaLayout);
        panelConvergenciaLayout.setHorizontalGroup(
            panelConvergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelConvergenciaLayout.setVerticalGroup(
            panelConvergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelResultadosLayout = new javax.swing.GroupLayout(panelResultados);
        panelResultados.setLayout(panelResultadosLayout);
        panelResultadosLayout.setHorizontalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelResultadosLayout.createSequentialGroup()
                        .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelResultadosLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel37))
                            .addGroup(panelResultadosLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel36)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel39))
                            .addComponent(jSeparator3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(panelConvergencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelResultadosLayout.setVerticalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel26))
                    .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(jLabel29)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel36)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelConvergencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        configuracion.setBackground(new java.awt.Color(245, 245, 245));

        panelAjuste.setBackground(new java.awt.Color(245, 245, 245));
        panelAjuste.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ajuste de parámetro ED-BL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Población");

        txtMaxPop.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaxPop.setText("50");
        txtMaxPop.setToolTipText("Valores permitidos entre 10 y 500.");

        txtCR.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCR.setText("0.45");
        txtCR.setToolTipText("Valores permitidos entre 0 y 1.");
        txtCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCRActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Cruza");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Mutación");

        txtF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtF.setText("0.65");
        txtF.setToolTipText("Valores permitidos entre 0 y 1.");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Generaciones");

        txtGmax.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtGmax.setText("400");
        txtGmax.setToolTipText("Valores permitidos entre 100 y 1000. ");

        lblPob.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblPob.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPob.setText("MAX_POP");
        lblPob.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblPob.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPobMouseClicked(evt);
            }
        });

        lblCruz.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblCruz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCruz.setText("CR");
        lblCruz.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblCruz.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCruz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCruzMouseClicked(evt);
            }
        });

        lblMut.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblMut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMut.setText("F");
        lblMut.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblMut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMutMouseClicked(evt);
            }
        });

        lblGen.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblGen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGen.setText("GMAX");
        lblGen.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblGen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblGen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGenMouseClicked(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setText("Probabilidad de BL");

        sliderProbabilidad.setBackground(new java.awt.Color(245, 245, 245));
        sliderProbabilidad.setMajorTickSpacing(1);
        sliderProbabilidad.setMaximum(10);
        sliderProbabilidad.setMinimum(1);
        sliderProbabilidad.setMinorTickSpacing(1);
        sliderProbabilidad.setPaintTicks(true);
        sliderProbabilidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        sliderProbabilidad.setFocusable(false);
        sliderProbabilidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderProbabilidadStateChanged(evt);
            }
        });

        lblIterBL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblIterBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIterBL.setText("10");

        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setText("Iteraciones para BL");

        sliderIterBL.setBackground(new java.awt.Color(245, 245, 245));
        sliderIterBL.setMajorTickSpacing(10);
        sliderIterBL.setMinimum(10);
        sliderIterBL.setPaintTicks(true);
        sliderIterBL.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        sliderIterBL.setFocusable(false);
        sliderIterBL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderIterBLStateChanged(evt);
            }
        });

        lblPro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblPro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPro.setText("0.1");

        javax.swing.GroupLayout panelAjusteLayout = new javax.swing.GroupLayout(panelAjuste);
        panelAjuste.setLayout(panelAjusteLayout);
        panelAjusteLayout.setHorizontalGroup(
            panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAjusteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaxPop, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPob))
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(47, 47, 47)
                        .addComponent(txtCR, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCruz, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAjusteLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtF, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelAjusteLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGmax, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblGen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAjusteLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelAjusteLayout.createSequentialGroup()
                                .addComponent(sliderIterBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblIterBL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelAjusteLayout.createSequentialGroup()
                                .addComponent(sliderProbabilidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPro, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelAjusteLayout.setVerticalGroup(
            panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAjusteLayout.createSequentialGroup()
                .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtMaxPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPob))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(lblCruz)))
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(5, 5, 5)
                        .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sliderProbabilidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMut)
                    .addComponent(jLabel19))
                .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelAjusteLayout.createSequentialGroup()
                                .addGroup(panelAjusteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(txtGmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGen))
                                .addGap(9, 9, 9))
                            .addComponent(sliderIterBL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelAjusteLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblIterBL, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelEstadisticas.setBackground(new java.awt.Color(245, 245, 245));
        panelEstadisticas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estadísticas ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N

        jLabel30.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel30.setText("Mejor f(x) encontrado");

        jLabel33.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel33.setText("Peor f(x) encontrado");

        txtMejor.setEditable(false);
        txtMejor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMejor.setText("0.0");
        txtMejor.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMejor.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtPeor.setEditable(false);
        txtPeor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPeor.setText("0.0");
        txtPeor.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtPeor.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel35.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel35.setText("Mediana");

        txtMedia.setEditable(false);
        txtMedia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMedia.setText("0.0");
        txtMedia.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMedia.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel34.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel34.setText("Media");

        txtMediana.setEditable(false);
        txtMediana.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMediana.setText("0.0");
        txtMediana.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMediana.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtSTD.setEditable(false);
        txtSTD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtSTD.setText("0.0");
        txtSTD.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtSTD.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel27.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel27.setText("Desviación Estándar");

        jLabel28.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel28.setText("Tasa de factibilidad");

        txtTasaFac.setEditable(false);
        txtTasaFac.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTasaFac.setText("0.0");
        txtTasaFac.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtTasaFac.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel31.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel31.setText("Tasa de éxito");

        txtTasaExito.setEditable(false);
        txtTasaExito.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTasaExito.setText("0.0");
        txtTasaExito.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtTasaExito.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        javax.swing.GroupLayout panelEstadisticasLayout = new javax.swing.GroupLayout(panelEstadisticas);
        panelEstadisticas.setLayout(panelEstadisticasLayout);
        panelEstadisticasLayout.setHorizontalGroup(
            panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEstadisticasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtMedia)
                        .addComponent(txtPeor)
                        .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMejor)
                                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                            .addComponent(jLabel33)))
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMediana, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtSTD, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(jLabel27)
                        .addComponent(jLabel28)
                        .addComponent(txtTasaFac)))
                .addGap(31, 31, 31)
                .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(txtTasaExito, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelEstadisticasLayout.setVerticalGroup(
            panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEstadisticasLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelEstadisticasLayout.createSequentialGroup()
                        .addGroup(panelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelEstadisticasLayout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addGap(3, 3, 3)
                                .addComponent(txtMediana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel27)
                                .addGap(3, 3, 3)
                                .addComponent(txtSTD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelEstadisticasLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel31)
                                .addGap(3, 3, 3)
                                .addComponent(txtTasaExito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)))
                        .addGap(6, 6, 6)
                        .addComponent(jLabel28)
                        .addGap(3, 3, 3)
                        .addComponent(txtTasaFac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEstadisticasLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(3, 3, 3)
                        .addComponent(txtMejor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel33)
                        .addGap(3, 3, 3)
                        .addComponent(txtPeor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel34)
                        .addGap(3, 3, 3)
                        .addComponent(txtMedia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(245, 245, 245));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ajustes de la ejecución", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N

        jLabel59.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("Configuración inicial");

        jLabel60.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel60.setText("Iteraciones");

        sliderIteraciones2.setBackground(new java.awt.Color(245, 245, 245));
        sliderIteraciones2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sliderIteraciones2.setMajorTickSpacing(1);
        sliderIteraciones2.setMaximum(30);
        sliderIteraciones2.setMinimum(1);
        sliderIteraciones2.setPaintTicks(true);
        sliderIteraciones2.setValue(1);
        sliderIteraciones2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        sliderIteraciones2.setFocusable(false);
        sliderIteraciones2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderIteracionesStateChanged(evt);
            }
        });

        jLabel61.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setText("Problema de optimización");

        lblIterED2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblIterED2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIterED2.setText("1");

        boxProblemas.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        boxProblemas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Process synthesis MINLP Kocis 1998", "Process synthesis MINLP - Yuan 1988" }));
        boxProblemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxProblemasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel59, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel60)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sliderIteraciones2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblIterED2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel61)
                            .addComponent(boxProblemas, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel59)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel60)
                        .addComponent(sliderIteraciones2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblIterED2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel61)
                .addGap(19, 19, 19)
                .addComponent(boxProblemas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configuración inicial", jPanel16);

        jPanel15.setBackground(new java.awt.Color(245, 245, 245));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalles", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel64.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel64.setText("D-imensión");

        jLabel65.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel65.setText("Número de f(x)");

        jLabel66.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel66.setText("Número de g(x)");

        jLabel67.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel67.setText("Variables discretas");

        jLabel68.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel68.setText("Número de h(x)");

        jLabel69.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel69.setText("Variables continuas");

        jLabel70.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel70.setText("Mejor f(x*)");

        txtD2.setEditable(false);
        txtD2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtD2.setText("0.0");
        txtD2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtD2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtFX2.setEditable(false);
        txtFX2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtFX2.setText("0.0");
        txtFX2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtFX2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtGX2.setEditable(false);
        txtGX2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtGX2.setText("0.0");
        txtGX2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtGX2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtHX2.setEditable(false);
        txtHX2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtHX2.setText("0.0");
        txtHX2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtHX2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtVariablesContinuas2.setEditable(false);
        txtVariablesContinuas2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtVariablesContinuas2.setText("0.0");
        txtVariablesContinuas2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtVariablesContinuas2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtVariablesBinarias2.setEditable(false);
        txtVariablesBinarias2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtVariablesBinarias2.setText("0.0");
        txtVariablesBinarias2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtVariablesBinarias2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtMejorConocido2.setEditable(false);
        txtMejorConocido2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMejorConocido2.setText("0.0");
        txtMejorConocido2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMejorConocido2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblNombreProblema.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNombreProblema.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreProblema.setText("-");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNombreProblema, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel68)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHX2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel66)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtGX2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFX2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addGap(68, 68, 68)
                                .addComponent(txtD2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel69)
                                    .addComponent(jLabel67))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtVariablesBinarias2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVariablesContinuas2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel70)
                                .addGap(18, 18, 18)
                                .addComponent(txtMejorConocido2)))))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addComponent(lblNombreProblema)
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtD2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64)
                    .addComponent(jLabel69)
                    .addComponent(txtVariablesContinuas2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(txtFX2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67)
                    .addComponent(txtVariablesBinarias2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(txtGX2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70)
                    .addComponent(txtMejorConocido2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(txtHX2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Características del problema", jPanel15);

        javax.swing.GroupLayout configuracionLayout = new javax.swing.GroupLayout(configuracion);
        configuracion.setLayout(configuracionLayout);
        configuracionLayout.setHorizontalGroup(
            configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(panelAjuste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelEstadisticas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        configuracionLayout.setVerticalGroup(
            configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAjuste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEstadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(245, 245, 245));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(114, 173, 139));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Problemas de optimización");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(114, 173, 139));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("en ingeniería");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(configuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(configuracion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        jMenuItem2.setText("Nuevo");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Salir");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");

        jMenuItem1.setText("Acerca de");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed

        //String nombreEjecucion = this.txtNombreEjecucion.getText();
        this.evolucionDiferencial = new EvolucionDiferencial();

        String pob = this.txtMaxPop.getText();
        String cruza = this.txtCR.getText();
        String mutacion = this.txtF.getText();
        String gmaxTxt = this.txtGmax.getText();

        //estructura condicional
        if ((this.validarCampo(pob) && this.validarCampo(cruza)
                && this.validarCampo(mutacion) && this.validarCampo(gmaxTxt))) {

            //Si los datos ingresados son correctos, entonces hacemos la conversión.
            int maxPop = Integer.parseInt(pob);
            double cr = Double.parseDouble(cruza);
            double f = Double.parseDouble(mutacion);
            int gmax = Integer.parseInt(gmaxTxt);

            //Se realiza la validación de rangos permitidos.
            if ((maxPop >= 10 && maxPop <= 500) && (f > 0 && f < 1)
                    && (cr > 0 && cr < 1) && (gmax >= 100 && gmax <= 1000)) {
                
                //Establecemos la configuración de parámetros
                this.evolucionDiferencial.setPoblacion(maxPop);
                this.evolucionDiferencial.setF(f);
                this.evolucionDiferencial.setCR(cr);
                this.evolucionDiferencial.setGmax(gmax);

                //Parámetros para Búsqueda Local
                this.evolucionDiferencial.setPRO_BUS(this.probabilidadBL);
                this.evolucionDiferencial.setMAX_ITER(this.iteracionesBL);
                
                //Iniciamos el algoritmo
                this.evolucionDiferencial.iniciar(ponr, this.iteracionesED);
                
                //Finalizado el algoritmo, mostramos los resultados
                this.mostrarTabla();
                this.mostrarEstadisticas();
                this.mostrarGrafica();
                                        
            } else {
                JOptionPane.showMessageDialog(null, "Verifique los límites en las etiquetas correspondientes. ");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Verificar que los valores ingresados sean de tipo numérico.");
        }

    }//GEN-LAST:event_btnIniciarActionPerformed

    private void sliderIteracionesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderIteracionesStateChanged
        this.iteracionesED = this.sliderIteraciones2.getValue();
        this.lblIterED2.setText("" + iteracionesED);
    }//GEN-LAST:event_sliderIteracionesStateChanged

    private void sliderIterBLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderIterBLStateChanged
        this.iteracionesBL = this.sliderIterBL.getValue();
        this.lblIterBL.setText("" + iteracionesBL);
    }//GEN-LAST:event_sliderIterBLStateChanged

    private void sliderProbabilidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderProbabilidadStateChanged

        this.probabilidadBL = (double) this.sliderProbabilidad.getValue() / 10;
        this.lblPro.setText("" + probabilidadBL);
    }//GEN-LAST:event_sliderProbabilidadStateChanged

    private void lblPobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPobMouseClicked
        JOptionPane.showMessageDialog(null, "Valores permitidos entre 10 y 500.");
    }//GEN-LAST:event_lblPobMouseClicked

    private void lblCruzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCruzMouseClicked
        JOptionPane.showMessageDialog(null, "Valores permitidos entre 0 y 1.");
    }//GEN-LAST:event_lblCruzMouseClicked

    private void lblMutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMutMouseClicked
        JOptionPane.showMessageDialog(null, "Valores permitidos entre 0 y 1.");
    }//GEN-LAST:event_lblMutMouseClicked

    private void lblGenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGenMouseClicked
        JOptionPane.showMessageDialog(null, "Valores permitidos entre 100 y 1000.");
    }//GEN-LAST:event_lblGenMouseClicked

    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetenerActionPerformed

        configuracionRecomenda();

    }//GEN-LAST:event_btnDetenerActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        configuracionRecomenda();
        tbResultado.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null}
                },
                new String[]{
                    "x1", "FO", "SVR"
                }
        ));

        this.panelConvergencia.removeAll();
        this.repaint();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCRActionPerformed

    private void boxProblemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxProblemasActionPerformed
        
        //Cargamos el problema seleccionado
        int problemaSeleccionado = this.boxProblemas.getSelectedIndex();
        this.cargarPonr(problemaSeleccionado);
        
        
    }//GEN-LAST:event_boxProblemasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            
//            //GTK+  CDE/Motif
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Substance".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        try {
            // set your theme
            AeroLookAndFeel.setTheme("Green-Giant-Font");

//        System.out.println( AeroLookAndFeel      .getThemes());
            // select the Look and Feel
            UIManager.setLookAndFeel(new AeroLookAndFeel());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    private void mostrarTabla() {

        int nColum = this.ponr.getOrdenVariables().length;
        this.cabecera = new String[nColum + 2];

        for (int i = 0; i < nColum; i++) {
            this.cabecera[i] = this.ponr.getOrdenVariables()[i];
        }

        this.cabecera[nColum] = "FO";
        this.cabecera[nColum + 1] = "SVR";

        int filas = evolucionDiferencial.getMejoresValores().length;
        int columnas = evolucionDiferencial.getMejoresValores()[0].length;
        Object[][] objectAux = new Object[filas][columnas];

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                objectAux[i][j] = evolucionDiferencial.getMejoresValores()[i][j];
            }
        }

        this.tbResultado.setModel(
                new DefaultTableModel(objectAux, cabecera)
        );

    }

    private void mostrarEstadisticas() {

        int indiceFO = this.ponr.getNumVariables();

        this.txtMejor.setText("" + this.estd.best(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtPeor.setText("" + this.estd.worst(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtMedia.setText("" + this.estd.mean(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtMediana.setText("" + this.estd.median(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtSTD.setText("" + this.estd.standardDeviation(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtTasaFac.setText("" + this.estd.feasibleRate(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtTasaExito.setText("" + this.estd.successRate(this.evolucionDiferencial.getMejoresValores(), indiceFO, this.ponr.getMejorConocido()));

    }

    private void cargarPonr(int problema) {
        
        switch (problema) {
            case 0 -> this.ponr = new SintesisProcesosKocis98();
            case 1 -> this.ponr = new SintesisProcesosYuan88();
        } //cierra switch


        this.lblNombreProblema.setText(this.ponr.getNombre());
        this.txtD2.setText("" + this.ponr.getNumVariables());
        this.txtFX2.setText("1");
        this.txtGX2.setText("" + this.ponr.getResDesigualdad().length);
        this.txtHX2.setText("0");

        int contador = 0;

        for (int i = 0; i < this.ponr.isVariableDiscreta().length; i++) {
            if (!this.ponr.isVariableDiscreta()[i]) {
                contador++;
            }
        }

        this.txtVariablesContinuas2.setText("" + contador);
        this.txtVariablesBinarias2.setText("" + (this.ponr.getNumVariables() - contador));
        this.txtMejorConocido2.setText(this.ponr.getMejorConocido() + "");
    }

    private void mostrarGrafica() {
        DefaultXYDataset dataset;
        JFreeChart chart;
        XYPlot plot;
        XYLineAndShapeRenderer renderer;
        ChartPanel chartPane1;

        dataset = new DefaultXYDataset();
        dataset.addSeries("Best Values ", this.evolucionDiferencial.getConvergencia());

        chart = null;
        chart = ChartFactory.createXYLineChart(
                "Gráfica de convergencia de la ejecución " + ((this.iteracionesED > 1) ? (int) this.iteracionesED / 2 : 1) //this.problem.getNameProblem()
                //"JMetaBFOP convergence for G09"
                ,
                 "Generaciones",
                "Función objetivo",
                dataset,
                PlotOrientation.VERTICAL, false, true, false);

        ((NumberAxis) chart.getXYPlot().getRangeAxis()).setNumberFormatOverride(new DecimalFormat("#.###############"));

        plot = (XYPlot) chart.getPlot();
        renderer = (XYLineAndShapeRenderer) plot.getRenderer();
        renderer.setSeriesShapesVisible(0, true);
        renderer.setSeriesPaint(0, Color.RED);

        renderer.setSeriesShape(0, ShapeUtilities.createDiamond(1));
        //renderer.setSeriesShape(0, new Ellipse2D.Double(6/2-3, 6/2-3, 2*3, 2*3));

        renderer.setSeriesStroke(0, new BasicStroke(2));
        chart.getXYPlot().setRenderer(renderer);
        plot.setDomainGridlinePaint(Color.GRAY);
        plot.setRangeGridlinePaint(Color.GRAY);
        chartPane1 = new ChartPanel(chart);
        chart.getPlot().setBackgroundPaint(new Color(245, 245, 245));

        graph(panelConvergencia, chartPane1);
    }

    private void graph(JPanel panel, ChartPanel chartPane) {
        panel.add(chartPane);
        chartPane.setBounds(0, 0, panel.getWidth(), panel.getHeight());
    }

    /**
     * Método para validar que una cadena de texto sea numerico
     *
     * @param cadena
     * @return
     */
    private boolean esNumero(String cadena) {
        try {
            Double.parseDouble(cadena);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }

    }

    /**
     * Método que valida si el texto ingresado por el usuario es numerico y no
     * es vacio.
     *
     * @param campo
     * @return
     */
    private boolean validarCampo(String campo) {
        return (this.esNumero(campo) && (!campo.isEmpty()));
    }

    private void configuracionRecomenda() {

        this.txtMaxPop.setText("50");
        this.txtCR.setText("0.45");
        this.txtF.setText("0.65");
        this.txtGmax.setText("400");
        this.sliderIterBL.setValue(10);
        this.sliderProbabilidad.setValue(1);
        this.sliderIteraciones2.setValue(1);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxProblemas;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JPanel configuracion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCruz;
    private javax.swing.JLabel lblGen;
    private javax.swing.JLabel lblIterBL;
    private javax.swing.JLabel lblIterED2;
    private javax.swing.JLabel lblMut;
    private javax.swing.JLabel lblNombreProblema;
    private javax.swing.JLabel lblPob;
    private javax.swing.JLabel lblPro;
    private javax.swing.JPanel panelAjuste;
    private javax.swing.JPanel panelConvergencia;
    private javax.swing.JPanel panelEstadisticas;
    private javax.swing.JPanel panelResultados;
    private javax.swing.JSlider sliderIterBL;
    private javax.swing.JSlider sliderIteraciones2;
    private javax.swing.JSlider sliderProbabilidad;
    private javax.swing.JTable tbResultado;
    private javax.swing.JTextField txtCR;
    private javax.swing.JTextField txtD2;
    private javax.swing.JTextField txtF;
    private javax.swing.JTextField txtFX2;
    private javax.swing.JTextField txtGX2;
    private javax.swing.JTextField txtGmax;
    private javax.swing.JTextField txtHX2;
    private javax.swing.JTextField txtMaxPop;
    private javax.swing.JTextField txtMedia;
    private javax.swing.JTextField txtMediana;
    private javax.swing.JTextField txtMejor;
    private javax.swing.JTextField txtMejorConocido2;
    private javax.swing.JTextField txtPeor;
    private javax.swing.JTextField txtSTD;
    private javax.swing.JTextField txtTasaExito;
    private javax.swing.JTextField txtTasaFac;
    private javax.swing.JTextField txtVariablesBinarias2;
    private javax.swing.JTextField txtVariablesContinuas2;
    // End of variables declaration//GEN-END:variables

}
